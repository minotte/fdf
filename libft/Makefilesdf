# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: nminotte <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/10/03 14:00:01 by nminotte          #+#    #+#              #
#    Updated: 2022/12/21 19:44:59 by nminotte         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME := libft.a


	
SRC = convert/ft_atoi.c \
	convert/ft_itoa.c \
	convert/ft_tolower.c \
	convert/ft_toupper.c \
	gnl/get_next_line.c \
	gnl/get_next_line_utils.c \
	lst/ft_lstadd_back.c \
	lst/ft_lstadd_front.c \
	lst/ft_lstclear.c \
	lst/ft_lstdelone.c \
	lst/ft_lstiter.c \
	lst/ft_lstlast.c \
	lst/ft_lstmap.c \
	lst/ft_lstnew.c \
	lst/ft_lstsize.c \
	mem/ft_bzero.c \
	mem/ft_calloc.c \
	mem/ft_memchr.c \
	mem/ft_memcmp.c \
	mem/ft_memcpy.c \
	mem/ft_memmove.c \
	mem/ft_memset.c \
	print/ft_printf.c \
	print/ft_putaddress.c \
	print/ft_putbase.c \
	print/ft_putchar_fd.c \
	print/ft_putendl_fd.c \
	print/ft_putnbr_fd.c \
	print/ft_putnbr_unsign.c \
	print/ft_putstr_fd.c \
	stack/ft_push.c \
	stack/ft_stackdelone.c \
	stack/ft_stackfind.c \
	stack/ft_stacklast.c \
	stack/ft_stacknew.c \
	stack/ft_stackreverse_rotate.c \
	stack/ft_stackrotate.c \
	stack/ft_stacksize.c \
	stack/ft_stackswap.c \
	str/ft_split.c \
	str/ft_strchr.c \
	str/ft_strdup.c \
	str/ft_striteri.c \
	str/ft_strjoin.c \
	str/ft_strlcat.c \
	str/ft_strlcpy.c \
	str/ft_strlen.c \
	str/ft_strmapi.c \
	str/ft_strncmp.c \
	str/ft_strnstr.c \
	str/ft_strrchr.c \
	str/ft_strtrim.c \
	str/ft_substr.c \
	test_str/ft_isalnum.c \
	test_str/ft_isalpha.c \
	test_str/ft_isascii.c \
	test_str/ft_isdigit.c \
	test_str/ft_isprint.c \


OBJS = $(SRC:.c=.o)

FLAGS = -Wall -Werror -Wextra

all : ${NAME}

%.o: %.c
	clang -c $(FLAGS) -o $@ $<

$(NAME) : $(OBJS) 
	ar rc $(NAME) $(OBJS)

clean :
	rm -rf $(OBJS) 

fclean: clean
	rm -rf $(NAME)

re: fclean all

.PHONY: all clean re fclean
